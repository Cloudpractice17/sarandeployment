# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '0a507084-27a9-430c-aecc-0c1a40407af9'
  imageRepository: 'jaganrajagopaljenkinswithdockercomposeup'
  containerRegistry: 'dotnetacrlatest'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(containerRegistry)
        tags: |
          $(tag)
    
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/manifests'
        artifact: 'manfiests'
        publishLocation: 'pipeline'

- stage: Deploytoaks
  dependsOn: Build 
  displayName: 'Deploy to Aks'
  variables:
    imagesecretkey: 'dotnetsecret'
    manfiests: 'manfiests'
    acrdevurl: 'dotnetacrlatest'
    imagerepo: 'dotnetwebapps'
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'jaganrajagopalJenkinswithdockercomposeup.dev'  
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadBuildArtifacts@1
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'manfiests'
                downloadPath: '$(System.ArtifactsDirectory)'
            #secret
            - task: KubernetesManifest@1
              inputs:
                action: 'createSecret'
                connectionType: 'kubernetesServiceConnection'
                kubernetesServiceConnection: 'akssvnlatest'
                namespace: 'default'
                secretType: 'dockerRegistry'
                secretName: $(imagesecretkey)
                dockerRegistryEndpoint: 'aksdev'
            - task: KubernetesManifest@1
              inputs:
                action: 'deploy'
                connectionType: 'kubernetesServiceConnection'
                kubernetesServiceConnection: 'akssvnlatest'
                namespace: 'default'
                manifests: 'manifest'
                containers: '$(acrdevurl)/$(imageRepository):$(tag)'
                imagePullSecrets: '$(imagesecretkey)'  
        
        
